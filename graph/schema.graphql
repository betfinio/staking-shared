type Claim @entity(immutable: true) {
    id: Bytes!
    staker: Bytes! # address
    amount: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
    address: Bytes! # address
}

type Pool @entity(immutable: false) {
    id: Bytes!
    pool: Bytes! # address
    staking: Bytes! # address
    lastDistributed: BigInt!
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
    stakes:[Stake!]! 
}

type Stake @entity(immutable: false) {
    id: Bytes!
    staker: Bytes! # address
    pool: Bytes! # address
    unlock:BigInt!# uint256
    amount: BigInt! # uint256
    address: Bytes! # address
    reward: BigInt!
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
    unstaked:Boolean!
    unstakedAt:BigInt!
    unstakeTransactionHash:Bytes
}



type ProfitDistribution @entity(immutable: true) {
    id: Bytes!
    pool: Pool! # address
    amount: BigInt! # uint256
    totalStaked: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type Profit @entity(immutable: true) {
    id: Bytes!
    pool: Bytes! # address
    staker: Bytes! # address
    amount: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}


type Claimable @entity(immutable: true) {
    id: Bytes!
    pool: Bytes! # address
    staker: Bytes! # address
    amount: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}